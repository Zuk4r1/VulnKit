import requests

def save_results_to_file(results, commands, filename="vulnerabilities_report.txt"):
    with open(filename, "w") as f:
        f.write("Resultados de la Herramienta de Vulnerabilidades\n")
        f.write("=" * 50 + "\n")
        f.write(f"{'Vulnerabilidad':<25} {'Detalles':<25}\n")
        f.write("-" * 50 + "\n")
        for result in results:
            f.write(f"{result['name']:<25} {result['details']:<25}\n")
        f.write("\nComandos Utilizados:\n")
        f.write("=" * 50 + "\n")
        for command in commands:
            f.write(f"{command}\n")
    print(f"[INFO] Resultados guardados en {filename}")

def check_security_headers(target):
    print(f"\n[INFO] Verificando encabezados de seguridad en: {target}")
    headers_to_check = ["Content-Security-Policy", "X-Frame-Options", "X-Content-Type-Options"]
    vulnerabilities = []

    try:
        response = requests.get(f"http://{target}", timeout=5)
        headers = response.headers
        for header in headers_to_check:
            if header not in headers:
                vulnerabilities.append({"name": "Falta encabezado", "details": header})
    except Exception as e:
        print(f"[ERROR] Error al verificar encabezados: {e}")
    return vulnerabilities

def generic_vulnerability_scan(target):
    """
    Realiza un escaneo genérico de vulnerabilidades en el objetivo.
    Verifica la presencia de encabezados de seguridad y realiza otras comprobaciones básicas.
    """
    print(f"[INFO] Iniciando escaneo de vulnerabilidades en {target}...")

    vulnerabilities = []
    
    # Verificación de encabezados de seguridad
    header_vulns = check_security_headers(target)
    vulnerabilities.extend(header_vulns)
    
    # Comprobación de la disponibilidad de HTTP Strict Transport Security (HSTS)
    try:
        response = requests.get(f"http://{target}", timeout=5)
        if "Strict-Transport-Security" not in response.headers:
            vulnerabilities.append({"name": "Falta encabezado HSTS", "details": "Strict-Transport-Security"})
    except Exception as e:
        print(f"[ERROR] Error al verificar HSTS: {e}")

    # Ejemplo de escaneo para otras vulnerabilidades (por ejemplo, XSS)
    # Puedes agregar más comprobaciones aquí
    # A continuación, solo es un ejemplo de cómo podrías seguir agregando más verificaciones.
    if not target.startswith("https"):
        vulnerabilities.append({"name": "Posible falta de HTTPS", "details": "El sitio no usa HTTPS"})

    # Otras verificaciones pueden ir aquí...

    return vulnerabilities
