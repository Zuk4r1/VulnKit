import requests

def save_results_to_file(results, commands, filename="vulnerabilities_report.txt"):
    with open(filename, "w") as f:
        f.write("Resultados de la Herramienta de Vulnerabilidades\n")
        f.write("=" * 50 + "\n")
        f.write(f"{'Vulnerabilidad':<25} {'Detalles':<25}\n")
        f.write("-" * 50 + "\n")
        for result in results:
            f.write(f"{result['name']:<25} {result['details']:<25}\n")
        f.write("\nComandos Utilizados:\n")
        f.write("=" * 50 + "\n")
        for command in commands:
            f.write(f"{command}\n")
    print(f"[INFO] Resultados guardados en {filename}")

def check_security_headers(target):
    print(f"\n[INFO] Verificando encabezados de seguridad en: {target}")
    headers_to_check = ["Content-Security-Policy", "X-Frame-Options", "X-Content-Type-Options"]
    vulnerabilities = []

    try:
        response = requests.get(f"http://{target}", timeout=5)
        headers = response.headers
        for header in headers_to_check:
            if header not in headers:
                vulnerabilities.append({"name": "Falta encabezado", "details": header})
    except Exception as e:
        print(f"[ERROR] Error al verificar encabezados: {e}")
    return vulnerabilities

